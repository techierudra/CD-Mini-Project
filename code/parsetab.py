
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIV FLOAT INT LEFTPAR MINUS MUL PLUS POWER RIGHTPARE : E PLUS T\n             | E MINUS T\n        E : TT : T MUL F\n             | T DIV F\n        T : FF : G POWER F\n             | MINUS G\n        F : GG : NUM\n             | LEFTPAR E RIGHTPAR\n        NUM : INT\n               | FLOAT\n        '
    
_lr_action_items = {'MINUS':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,],[3,11,-3,-6,-9,-10,3,-12,-13,3,3,3,3,-8,3,11,-1,-2,-4,-5,-7,-11,]),'LEFTPAR':([0,3,7,10,11,12,13,15,],[7,7,7,7,7,7,7,7,]),'INT':([0,3,7,10,11,12,13,15,],[8,8,8,8,8,8,8,8,]),'FLOAT':([0,3,7,10,11,12,13,15,],[9,9,9,9,9,9,9,9,]),'$end':([1,2,4,5,6,8,9,14,17,18,19,20,21,22,],[0,-3,-6,-9,-10,-12,-13,-8,-1,-2,-4,-5,-7,-11,]),'PLUS':([1,2,4,5,6,8,9,14,16,17,18,19,20,21,22,],[10,-3,-6,-9,-10,-12,-13,-8,10,-1,-2,-4,-5,-7,-11,]),'RIGHTPAR':([2,4,5,6,8,9,14,16,17,18,19,20,21,22,],[-3,-6,-9,-10,-12,-13,-8,22,-1,-2,-4,-5,-7,-11,]),'MUL':([2,4,5,6,8,9,14,17,18,19,20,21,22,],[12,-6,-9,-10,-12,-13,-8,12,12,-4,-5,-7,-11,]),'DIV':([2,4,5,6,8,9,14,17,18,19,20,21,22,],[13,-6,-9,-10,-12,-13,-8,13,13,-4,-5,-7,-11,]),'POWER':([5,6,8,9,22,],[15,-10,-12,-13,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'E':([0,7,],[1,16,]),'T':([0,7,10,11,],[2,2,17,18,]),'F':([0,7,10,11,12,13,15,],[4,4,4,4,19,20,21,]),'G':([0,3,7,10,11,12,13,15,],[5,14,5,5,5,5,5,5,]),'NUM':([0,3,7,10,11,12,13,15,],[6,6,6,6,6,6,6,6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> E","S'",1,None,None,None),
  ('E -> E PLUS T','E',3,'p_E','myparser.py',10),
  ('E -> E MINUS T','E',3,'p_E','myparser.py',11),
  ('E -> T','E',1,'p_E_T','myparser.py',19),
  ('T -> T MUL F','T',3,'p_T','myparser.py',23),
  ('T -> T DIV F','T',3,'p_T','myparser.py',24),
  ('T -> F','T',1,'p_T_F','myparser.py',35),
  ('F -> G POWER F','F',3,'p_F','myparser.py',39),
  ('F -> MINUS G','F',2,'p_F','myparser.py',40),
  ('F -> G','F',1,'p_F_G','myparser.py',48),
  ('G -> NUM','G',1,'p_G','myparser.py',52),
  ('G -> LEFTPAR E RIGHTPAR','G',3,'p_G','myparser.py',53),
  ('NUM -> INT','NUM',1,'p_NUM','myparser.py',61),
  ('NUM -> FLOAT','NUM',1,'p_NUM','myparser.py',62),
]
